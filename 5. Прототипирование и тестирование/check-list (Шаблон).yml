language: ru
name: Название проекта
comment: ""
introduction: >-2
    Это задание является индивидуальным, поэтому выполняй его самостоятельно. Проверки в проекте очень важны:

    -  Проверки — это не просто формальная сверка ответов с чек-листом, а важнейший этап обучения, где ты можешь обменяться опытом, обсудить сложности и сгенерировать новые подходы к решению. Этот механизм существенно влияет на динамику обучения.

    -  Ты сможешь посмотреть на разные варианты решения проекта: проверяя проекты других участников, ты не просто оцениваешь проект, но и активно изучаешь и анализируешь другие варианты решения задачи, обогащая свой опыт.

    -  Обсуждение способствует пониманию и усвоению: обсуждая проблемы и сложности в процессе проверки, ты не только сможешь выявить возможные недопонимания, но и с помощью совместного «мозгового штурма» добьешься осознанного подхода к выполнению задания.

    -  Задавай уточняющие вопросы, вступай в диалог с пирами. Даже если ты еще не сделал проект, но уже проверяешь его у другого участника, не беспокойся! В таком случае проверяемый должен выступить в роли ментора и подробно объяснить свою работу. Это поможет ему увидеть свое решение с другой стороны и улучшить навыки самопрезентации, а тебе — лучше разобраться в теме.

    -  Выявляя ошибки, исправляй их: при обсуждении ошибок не концентрируйся только на их выявлении; лучше ищи способы их исправления и улучшения качества будущих заданий.

    -  Не забывай, что твоя главная задача — вести открытую коммуникацию, прислушиваться к тому, как мыслят и учатся другие. Пробуй вместе с другими пирами искать новые смыслы в той теории, которую ты изучил, объясняй остальным те моменты, которые понял лучше всего, делись инструментами, которые помогают тебе эффективно обучаться и познавать новую профессию.  Главное — дружелюбие и открытость, ведь все вы идете к одной цели. :) 
guidelines: >-
    -  Подлежат оцениванию только те файлы, которые участник или группа выложили в GIT-репозиторий в папку src.

    -  Убедись в том, что ты ничего не перепутал, и репозиторий является репозиторием участника или группы, которых ты проверяешь.

    -  Если ты сам ещё не закончил работу над заданием, обязательно перечитай его ещё раз перед проверкой.

    -  В конце чек-листа есть специальные флаги: EMPTY WORK, если репозиторий пустой или решение запушено не в папку src ветки develop, либо ветка develop отсутствует; CHEAT, если ты уверен, что участник не сам выполнил работу (например, не может объяснить решение). В случае применения одного из флагов в конце чек-листа проект будет провален. Однако, кроме случаев плагиата, мы призываем все равно продолжить проверку и попытаться вместе с другим учащимся выяснить проблему, которая привела к неработающему решению. 
quick_actions:
  - EMPTY_WORK
  - CHEAT
sections:
  - kind: "1"
    name: "Задание 1. Простой прототип"
    description: ""
    - Выбраны экраны из предыдущих проектов.
    - Сделаны переходы в Figma с помощью интерактивных переходов.
    - Настроены простые анимации (переходы, hover, click)
    - Результат: интерактивный lo-fi или hi-fi прототип в Figma.

    Задание 2. UX-копирайтинг и тестирование текстов
    - Выбран сценарий из предложенных: например, регистрация, ошибка авторизации, оформление заказа или onboarding.
    - Использован ИИ в работе для генерации формулировок
    - Проведен анализ обратной связи пользователей
    - Написаны тексты для каждого элемента в сценарии
      - заголовок,
      - CTA-кнопка,
      - подсказка/ошибка,
      - подтверждение действия.
    - Создан интерактивный прототип в Figma, в котором каждый вариант текста отображается на отдельном экране (A/B/C версии).
    - Проведено мини-тестирование:
      - собрана обратная связь с 3–4 участников
      - Зафиксированы результаты в таблице
    - описан вывод какой стиль общения подходит продукту
    - Результатом задания будет:
      - 3 варианта UX-текстов для одного сценария.
      - Прототип с A/B/C вариантами.
      - Мини-отчёт по пользовательскому тестированию (таблица + вывод).

    Задание 3. Проведение комплексного usability-тестирования
    - Разработан выбранный сценарий. 
    - Сформулированы 2–3 гипотезы
    - Проведено тестирование на минимум 3 участников.
    - Проведи usability-тест (онлайн или очно).
    - Зафиксированы поведение, комментарии, ошибки, эмоции.
    - Составлена таблица-протокол.
    - Разбиты найденные проблемы по уровням: критичные / средние / минорные.
    - Сделан сводный отчёт в виде таблицы или mind-map в Miro/Holst.
    - Для каждой полученной проблемы предложено решение.
    - Внесены корректировки в Figma.
    - Зафиксированы до/после (экран с проблемой → экран после правки).
    - Результат задания будет:
      - Таблица наблюдений и отчёт с выводами.
      - Улучшенны макеты с объяснением, какие изменения внесены и почему.

      
     Бонусное задание 4. Полноценный UX-эксперимент: A/B-тестирование
     - Сформулированы гипотезы, 
     - Подготовлены варианты
     - Созданы две версии экрана или сценария:
        - Вариант A — исходный (контрольный).
        - Вариант B — с изменением (тестовый).
     - Проведено тестирование. Минимум — 5 участников, максимум — 10.
     - Собраны данные:
       - Время выполнения задачи.
       - Количество ошибок или повторных действий.
       - Количество завершённых сценариев (успех/провал).
       - Эмоциональные комментарии пользователей.
    - Собран анализ результатов:
      - Успешное выполнение (%)
      - Среднее время выполнения
      - Количество ошибок
      - Сравнение A и B по каждой метрике.
      - Написан вывод 
   - Внесены улучшения в Figma.
   - Задокументированы изменения: что тестировалось, результат, вывод.
   - Результатом этого задания будет:
   - Протокол тестирования с результатами.
   - Аналитический отчёт с выводами и улучшениями.
   - Обновлённые макеты на основе результатов теста.
